/******File auto-generated from AGAggregator.py**********/
/* Network Topology Definitions:*/
/* edges in graph represent connections among nodes as well as gateways */
hacl('10.0.0.10/32', '10.0.0.9/32',_proto,_port).
hacl('10.0.0.2/32', '10.0.0.1/32',_proto,_port).
hacl('10.0.0.2/32', '10.0.0.3/32',_proto,_port).
hacl('10.0.0.7/32', '10.0.0.6/32',_proto,_port).
hacl('10.0.0.7/32', '10.0.0.8/32',_proto,_port).
hacl('10.0.0.9/32', '10.0.0.8/32',_proto,_port).
hacl('10.0.0.4/32', '10.0.0.3/32',_proto,_port).
hacl('10.0.0.4/32', '10.0.0.5/32',_proto,_port).
hacl('10.0.0.6/32', '10.0.0.5/32',_proto,_port).
gateway('10.0.0.10/32').
gateway('10.0.0.2/32').
gateway('10.0.0.7/32').
gateway('10.0.0.9/32').
gateway('10.0.0.8/32').
gateway('10.0.0.4/32').
gateway('10.0.0.6/32').
gateway('10.0.0.5/32').
gateway('10.0.0.3/32').
gateway('10.0.0.1/32').

/* Flow Definitions: */
/* Flow #1 :*/
flowExists('10.0.0.1/32','10.0.0.6/32', 'UDP', _port, flow1Account).
hasAccount(flow1Principal,'10.0.0.6/32', flow1Account).

/* Flow #2 :*/
flowExists('10.0.0.3/32','10.0.0.8/32', 'UDP', _port, flow2Account).
hasAccount(flow2Principal,'10.0.0.8/32', flow2Account).

/******Attacker Located:**********/
attackerLocated('10.0.0.7/32').

/******Semi-Auto definitions (please modify if needed):**********/
/* No routing vulnerabilities were found!!*/

/******Manual definitions should go here:**********/
/** Temporary for testing (we're assuming there is a login service for each dst in each flow)**/
