<?xml version="1.0" encoding="UTF-8"?>
<Scenario>
  <NetworkPlan>
    <NetworkDefinition id="11" name="wlan11" type="WlanNode">
      <model name="netem" netif="eth0" peer="n1">
        <bw>54000000</bw>
        <delay>50000</delay>
      </model>
      <model name="netem" netif="eth0" peer="n2">
        <bw>54000000</bw>
        <delay>50000</delay>
      </model>
      <model name="netem" netif="eth0" peer="n3">
        <bw>54000000</bw>
        <delay>50000</delay>
      </model>
      <model name="netem" netif="eth0" peer="n4">
        <bw>54000000</bw>
        <delay>50000</delay>
      </model>
      <model name="netem" netif="eth0" peer="n5">
        <bw>54000000</bw>
        <delay>50000</delay>
      </model>
      <model name="netem" netif="eth0" peer="n6">
        <bw>54000000</bw>
        <delay>50000</delay>
      </model>
      <model name="netem" netif="eth0" peer="n7">
        <bw>54000000</bw>
        <delay>50000</delay>
      </model>
      <model name="netem" netif="eth0" peer="n8">
        <bw>54000000</bw>
        <delay>50000</delay>
      </model>
      <model name="netem" netif="eth0" peer="n9">
        <bw>54000000</bw>
        <delay>50000</delay>
      </model>
      <model name="netem" netif="eth0" peer="n10">
        <bw>54000000</bw>
        <delay>50000</delay>
      </model>
      <model name="basic_range" type="wireless">
        <range>176</range>
        <bandwidth>54000000</bandwidth>
        <jitter>0</jitter>
        <delay>50000</delay>
        <error>0</error>
      </model>
      <model name="ns2script" type="mobility">
        <file>/root/IntelAttacker/staticScenarios/chainCoords.scen</file>
        <refresh_ms>50</refresh_ms>
        <loop>0</loop>
        <autostart>1.0</autostart>
        <map></map>
        <script_start></script_start>
        <script_pause></script_pause>
        <script_stop></script_stop>
      </model>
    </NetworkDefinition>
    <Node id="1" name="n1" type="router">
      <interface name="eth0" net="wlan11">
        <address type="mac">00:00:00:aa:00:00</address>
        <address>10.0.0.1/32</address>
        <address>a::1/128</address>
      </interface>
    </Node>
    <Node id="2" name="n2" type="router">
      <interface name="eth0" net="wlan11">
        <address type="mac">00:00:00:aa:00:01</address>
        <address>10.0.0.2/32</address>
        <address>a::2/128</address>
      </interface>
    </Node>
    <Node id="3" name="n3" type="router">
      <interface name="eth0" net="wlan11">
        <address type="mac">00:00:00:aa:00:02</address>
        <address>10.0.0.3/32</address>
        <address>a::3/128</address>
      </interface>
    </Node>
    <Node id="4" name="n4" type="router">
      <interface name="eth0" net="wlan11">
        <address type="mac">00:00:00:aa:00:03</address>
        <address>10.0.0.4/32</address>
        <address>a::4/128</address>
      </interface>
    </Node>
    <Node id="5" name="n5" type="router">
      <interface name="eth0" net="wlan11">
        <address type="mac">00:00:00:aa:00:04</address>
        <address>10.0.0.5/32</address>
        <address>a::5/128</address>
      </interface>
    </Node>
    <Node id="6" name="n6" type="router">
      <interface name="eth0" net="wlan11">
        <address type="mac">00:00:00:aa:00:05</address>
        <address>10.0.0.6/32</address>
        <address>a::6/128</address>
      </interface>
    </Node>
    <Node id="7" name="n7" type="router">
      <interface name="eth0" net="wlan11">
        <address type="mac">00:00:00:aa:00:06</address>
        <address>10.0.0.7/32</address>
        <address>a::7/128</address>
      </interface>
    </Node>
    <Node id="8" name="n8" type="router">
      <interface name="eth0" net="wlan11">
        <address type="mac">00:00:00:aa:00:07</address>
        <address>10.0.0.8/32</address>
        <address>a::8/128</address>
      </interface>
    </Node>
    <Node id="9" name="n9" type="router">
      <interface name="eth0" net="wlan11">
        <address type="mac">00:00:00:aa:00:08</address>
        <address>10.0.0.9/32</address>
        <address>a::9/128</address>
      </interface>
    </Node>
    <Node id="10" name="n10" type="router">
      <interface name="eth0" net="wlan11">
        <address type="mac">00:00:00:aa:00:09</address>
        <address>10.0.0.10/32</address>
        <address>a::10/128</address>
      </interface>
    </Node>
  </NetworkPlan>
  <MotionPlan>
    <origin alt="2.0" lat="47.5791667" lon="-122.132322" scale100="150.0"/>
    <Node name="wlan11">
      <motion type="stationary">
        <point>0,0</point>
      </motion>
    </Node>
    <Node name="n1">
      <motion type="stationary">
        <point>224,113</point>
      </motion>
    </Node>
    <Node name="n2">
      <motion type="stationary">
        <point>364,58</point>
      </motion>
    </Node>
    <Node name="n3">
      <motion type="stationary">
        <point>503,72</point>
      </motion>
    </Node>
    <Node name="n4">
      <motion type="stationary">
        <point>622,161</point>
      </motion>
    </Node>
    <Node name="n5">
      <motion type="stationary">
        <point>685,269</point>
      </motion>
    </Node>
    <Node name="n6">
      <motion type="stationary">
        <point>638,393</point>
      </motion>
    </Node>
    <Node name="n7">
      <motion type="stationary">
        <point>552,466</point>
      </motion>
    </Node>
    <Node name="n8">
      <motion type="stationary">
        <point>436,446</point>
      </motion>
    </Node>
    <Node name="n9">
      <motion type="stationary">
        <point>329,392</point>
      </motion>
    </Node>
    <Node name="n10">
      <motion type="stationary">
        <point>228,296</point>
      </motion>
    </Node>
  </MotionPlan>
  <ServicePlan>
    <Node type="router">
      <Service name="zebra"/>
      <Service name="OSPFv2"/>
      <Service name="OSPFv3"/>
      <Service name="vtysh"/>
      <Service name="IPForward"/>
    </Node>
    <Node name="n1">
      <Service name="OLSR" startup_idx="45"/>
      <Service name="IPForward" startup_idx="5"/>
      <Service custom="True" name="UserDefined" startup_idx="35">
        <File name="custom-post-config-commands.sh">route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = &quot;FreeBSD&quot; ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
cd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;

#now insert attack script
if [ `hostname` = n1 -o 1 = 0 ]
then

#start logging
tshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP &gt; $HN.capture &amp;    

mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &amp;

(
cat &lt;&lt; 'EOF'
#!/bin/bash

startTime=$1
duration=$2

echo &quot;none&quot; &gt; /tmp/attack.txt
sleep $startTime
echo &quot;down&quot; &gt; /tmp/attack.txt
ifconfig eth0 down
sleep $duration

ifconfig eth0 up
rm /tmp/attack.txt

EOF
) &gt; attack.sh

chmod 755 attack.sh

./attack.sh 60 60  
else
echo `hostname` &gt;&gt; /tmp/check.txt
mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py &gt; `hostname`.mgencapture &amp;
fi</File>
        <Command type="start">sh custom-post-config-commands.sh</Command>
      </Service>
    </Node>
    <Node name="n2">
      <Service name="OLSR" startup_idx="45"/>
      <Service name="IPForward" startup_idx="5"/>
      <Service custom="True" name="UserDefined" startup_idx="35">
        <File name="custom-post-config-commands.sh">route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = &quot;FreeBSD&quot; ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
cd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;

#now insert attack script
if [ `hostname` = n1 -o 1 = 0 ]
then

#start logging
tshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP &gt; $HN.capture &amp;    

mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &amp;

(
cat &lt;&lt; 'EOF'
#!/bin/bash

startTime=$1
duration=$2

echo &quot;none&quot; &gt; /tmp/attack.txt
sleep $startTime
echo &quot;down&quot; &gt; /tmp/attack.txt
ifconfig eth0 down
sleep $duration

ifconfig eth0 up
rm /tmp/attack.txt

EOF
) &gt; attack.sh

chmod 755 attack.sh

./attack.sh 60 60  
else
echo `hostname` &gt;&gt; /tmp/check.txt
mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py &gt; `hostname`.mgencapture &amp;
fi</File>
        <Command type="start">sh custom-post-config-commands.sh</Command>
      </Service>
    </Node>
    <Node name="n3">
      <Service name="OLSR" startup_idx="45"/>
      <Service name="IPForward" startup_idx="5"/>
      <Service custom="True" name="UserDefined" startup_idx="35">
        <File name="custom-post-config-commands.sh">route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = &quot;FreeBSD&quot; ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
cd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;

#now insert attack script
if [ `hostname` = n1 -o 1 = 0 ]
then

#start logging
tshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP &gt; $HN.capture &amp;    

mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &amp;

(
cat &lt;&lt; 'EOF'
#!/bin/bash

startTime=$1
duration=$2

echo &quot;none&quot; &gt; /tmp/attack.txt
sleep $startTime
echo &quot;down&quot; &gt; /tmp/attack.txt
ifconfig eth0 down
sleep $duration

ifconfig eth0 up
rm /tmp/attack.txt

EOF
) &gt; attack.sh

chmod 755 attack.sh

./attack.sh 60 60  
else
echo `hostname` &gt;&gt; /tmp/check.txt
mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py &gt; `hostname`.mgencapture &amp;
fi</File>
        <Command type="start">sh custom-post-config-commands.sh</Command>
      </Service>
    </Node>
    <Node name="n4">
      <Service name="OLSR" startup_idx="45"/>
      <Service name="IPForward" startup_idx="5"/>
      <Service custom="True" name="UserDefined" startup_idx="35">
        <File name="custom-post-config-commands.sh">route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = &quot;FreeBSD&quot; ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
cd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;

#now insert attack script
if [ `hostname` = n1 -o 1 = 0 ]
then

#start logging
tshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP &gt; $HN.capture &amp;    

mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &amp;

(
cat &lt;&lt; 'EOF'
#!/bin/bash

startTime=$1
duration=$2

echo &quot;none&quot; &gt; /tmp/attack.txt
sleep $startTime
echo &quot;down&quot; &gt; /tmp/attack.txt
ifconfig eth0 down
sleep $duration

ifconfig eth0 up
rm /tmp/attack.txt

EOF
) &gt; attack.sh

chmod 755 attack.sh

./attack.sh 60 60  
else
echo `hostname` &gt;&gt; /tmp/check.txt
mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py &gt; `hostname`.mgencapture &amp;
fi</File>
        <Command type="start">sh custom-post-config-commands.sh</Command>
      </Service>
    </Node>
    <Node name="n5">
      <Service name="OLSR" startup_idx="45"/>
      <Service name="IPForward" startup_idx="5"/>
      <Service custom="True" name="UserDefined" startup_idx="35">
        <File name="custom-post-config-commands.sh">route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = &quot;FreeBSD&quot; ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
cd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;

#now insert attack script
if [ `hostname` = n1 -o 1 = 0 ]
then

#start logging
tshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP &gt; $HN.capture &amp;    

mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &amp;

(
cat &lt;&lt; 'EOF'
#!/bin/bash

startTime=$1
duration=$2

echo &quot;none&quot; &gt; /tmp/attack.txt
sleep $startTime
echo &quot;down&quot; &gt; /tmp/attack.txt
ifconfig eth0 down
sleep $duration

ifconfig eth0 up
rm /tmp/attack.txt

EOF
) &gt; attack.sh

chmod 755 attack.sh

./attack.sh 60 60  
else
echo `hostname` &gt;&gt; /tmp/check.txt
mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py &gt; `hostname`.mgencapture &amp;
fi</File>
        <Command type="start">sh custom-post-config-commands.sh</Command>
      </Service>
    </Node>
    <Node name="n6">
      <Service name="OLSR" startup_idx="45"/>
      <Service name="IPForward" startup_idx="5"/>
      <Service custom="True" name="UserDefined" startup_idx="35">
        <File name="custom-post-config-commands.sh">route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = &quot;FreeBSD&quot; ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
cd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;

#now insert attack script
if [ `hostname` = n1 -o 1 = 0 ]
then

#start logging
tshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP &gt; $HN.capture &amp;    

mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &amp;

(
cat &lt;&lt; 'EOF'
#!/bin/bash

startTime=$1
duration=$2

echo &quot;none&quot; &gt; /tmp/attack.txt
sleep $startTime
echo &quot;down&quot; &gt; /tmp/attack.txt
ifconfig eth0 down
sleep $duration

ifconfig eth0 up
rm /tmp/attack.txt

EOF
) &gt; attack.sh

chmod 755 attack.sh

./attack.sh 60 60  
else
echo `hostname` &gt;&gt; /tmp/check.txt
mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py &gt; `hostname`.mgencapture &amp;
fi</File>
        <Command type="start">sh custom-post-config-commands.sh</Command>
      </Service>
    </Node>
    <Node name="n7">
      <Service name="OLSR" startup_idx="45"/>
      <Service name="IPForward" startup_idx="5"/>
      <Service custom="True" name="UserDefined" startup_idx="35">
        <File name="custom-post-config-commands.sh">route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = &quot;FreeBSD&quot; ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
cd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;

#now insert attack script
if [ `hostname` = n1 -o 1 = 0 ]
then

#start logging
tshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP &gt; $HN.capture &amp;    

mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &amp;

(
cat &lt;&lt; 'EOF'
#!/bin/bash

startTime=$1
duration=$2

echo &quot;none&quot; &gt; /tmp/attack.txt
sleep $startTime
echo &quot;down&quot; &gt; /tmp/attack.txt
ifconfig eth0 down
sleep $duration

ifconfig eth0 up
rm /tmp/attack.txt

EOF
) &gt; attack.sh

chmod 755 attack.sh

./attack.sh 60 60  
else
echo `hostname` &gt;&gt; /tmp/check.txt
mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py &gt; `hostname`.mgencapture &amp;
fi</File>
        <Command type="start">sh custom-post-config-commands.sh</Command>
      </Service>
    </Node>
    <Node name="n8">
      <Service name="OLSR" startup_idx="45"/>
      <Service name="IPForward" startup_idx="5"/>
      <Service custom="True" name="UserDefined" startup_idx="35">
        <File name="custom-post-config-commands.sh">route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = &quot;FreeBSD&quot; ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
cd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;

#now insert attack script
if [ `hostname` = n1 -o 1 = 0 ]
then

#start logging
tshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP &gt; $HN.capture &amp;    

mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &amp;

(
cat &lt;&lt; 'EOF'
#!/bin/bash

startTime=$1
duration=$2

echo &quot;none&quot; &gt; /tmp/attack.txt
sleep $startTime
echo &quot;down&quot; &gt; /tmp/attack.txt
ifconfig eth0 down
sleep $duration

ifconfig eth0 up
rm /tmp/attack.txt

EOF
) &gt; attack.sh

chmod 755 attack.sh

./attack.sh 60 60  
else
echo `hostname` &gt;&gt; /tmp/check.txt
mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py &gt; `hostname`.mgencapture &amp;
fi</File>
        <Command type="start">sh custom-post-config-commands.sh</Command>
      </Service>
    </Node>
    <Node name="n9">
      <Service name="OLSR" startup_idx="45"/>
      <Service name="IPForward" startup_idx="5"/>
      <Service custom="True" name="UserDefined" startup_idx="35">
        <File name="custom-post-config-commands.sh">route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = &quot;FreeBSD&quot; ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
cd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;

#now insert attack script
if [ `hostname` = n1 -o 1 = 0 ]
then

#start logging
tshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP &gt; $HN.capture &amp;    

mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &amp;

(
cat &lt;&lt; 'EOF'
#!/bin/bash

startTime=$1
duration=$2

echo &quot;none&quot; &gt; /tmp/attack.txt
sleep $startTime
echo &quot;down&quot; &gt; /tmp/attack.txt
ifconfig eth0 down
sleep $duration

ifconfig eth0 up
rm /tmp/attack.txt

EOF
) &gt; attack.sh

chmod 755 attack.sh

./attack.sh 60 60  
else
echo `hostname` &gt;&gt; /tmp/check.txt
mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py &gt; `hostname`.mgencapture &amp;
fi</File>
        <Command type="start">sh custom-post-config-commands.sh</Command>
      </Service>
    </Node>
    <Node name="n10">
      <Service name="OLSR" startup_idx="45"/>
      <Service name="IPForward" startup_idx="5"/>
      <Service custom="True" name="UserDefined" startup_idx="35">
        <File name="custom-post-config-commands.sh">route add default dev eth0
route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0
    
#!/bin/sh
HN=`hostname`
if [ `uname` = &quot;FreeBSD&quot; ]; then
  SCRIPTDIR=/tmp/e0_$HN
else SCRIPTDIR=/root/
fi
cd $SCRIPTDIR
mkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
cd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt
    
#get ip of current
hostnameLen=`expr length $HN`
hostnameLen=`expr $hostnameLen - 1`
myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;

#now insert attack script
if [ `hostname` = n1 -o 1 = 0 ]
then

#start logging
tshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP &gt; $HN.capture &amp;    

mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null &amp;

(
cat &lt;&lt; 'EOF'
#!/bin/bash

startTime=$1
duration=$2

echo &quot;none&quot; &gt; /tmp/attack.txt
sleep $startTime
echo &quot;down&quot; &gt; /tmp/attack.txt
ifconfig eth0 down
sleep $duration

ifconfig eth0 up
rm /tmp/attack.txt

EOF
) &gt; attack.sh

chmod 755 attack.sh

./attack.sh 60 60  
else
echo `hostname` &gt;&gt; /tmp/check.txt
mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py &gt; `hostname`.mgencapture &amp;
fi</File>
        <Command type="start">sh custom-post-config-commands.sh</Command>
      </Service>
    </Node>
  </ServicePlan>
  <CoreMetaData>
    <MetaData>
      <param name="global_options">interface_names=no ip_addresses=yes ipv6_addresses=yes node_labels=yes link_labels=yes show_api=no background_images=no annotations=yes grid=no traffic_start=0</param>
      <param name="canvas c1">{name {Canvas1}} {wallpaper-style {upperleft}} {wallpaper {sample4-bg.jpg}} {size {1000 750}}</param>
    </MetaData>
  </CoreMetaData>
</Scenario>
