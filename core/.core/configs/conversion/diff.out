[append-first, /Scenario[1]/MotionPlan[1]/Node[11]/motion[1],
<point>
233.0,268.0
</point>
]
[update, /Scenario[1]/NetworkPlan[1]/NetworkDefinition[1]/model[11]/@name, basic_Range]
[update, /Scenario[1]/NetworkPlan[1]/Node[1]/interface[1]/address[1]/text()[1], 00:00:00:aa:00:1]
[update, /Scenario[1]/NetworkPlan[1]/Node[2]/interface[1]/address[1]/text()[1], 00:00:00:aa:00:2]
[update, /Scenario[1]/NetworkPlan[1]/Node[3]/interface[1]/address[1]/text()[1], 00:00:00:aa:00:3]
[update, /Scenario[1]/NetworkPlan[1]/Node[4]/interface[1]/address[1]/text()[1], 00:00:00:aa:00:4]
[update, /Scenario[1]/NetworkPlan[1]/Node[5]/interface[1]/address[1]/text()[1], 00:00:00:aa:00:5]
[update, /Scenario[1]/NetworkPlan[1]/Node[6]/interface[1]/address[1]/text()[1], 00:00:00:aa:00:6]
[update, /Scenario[1]/NetworkPlan[1]/Node[7]/interface[1]/address[1]/text()[1], 00:00:00:aa:00:7]
[update, /Scenario[1]/NetworkPlan[1]/Node[8]/interface[1]/address[1]/text()[1], 00:00:00:aa:00:8]
[update, /Scenario[1]/NetworkPlan[1]/Node[9]/interface[1]/address[1]/text()[1], 00:00:00:aa:00:9]
[update, /Scenario[1]/NetworkPlan[1]/Node[10]/interface[1]/address[1]/text()[1], 00:00:00:aa:00:10]
[update, /Scenario[1]/MotionPlan[1]/Node[2]/motion[1]/point[1]/text()[1], 224.0,113.0]
[update, /Scenario[1]/MotionPlan[1]/Node[3]/motion[1]/point[1]/text()[1], 364.0,58.0]
[update, /Scenario[1]/MotionPlan[1]/Node[4]/motion[1]/point[1]/text()[1], 503.0,72.0]
[update, /Scenario[1]/MotionPlan[1]/Node[5]/motion[1]/point[1]/text()[1], 622.0,161.0]
[update, /Scenario[1]/MotionPlan[1]/Node[6]/motion[1]/point[1]/text()[1], 685.0,269.0]
[update, /Scenario[1]/MotionPlan[1]/Node[7]/motion[1]/point[1]/text()[1], 638.0,393.0]
[update, /Scenario[1]/MotionPlan[1]/Node[8]/motion[1]/point[1]/text()[1], 552.0,466.0]
[update, /Scenario[1]/MotionPlan[1]/Node[9]/motion[1]/point[1]/text()[1], 436.0,446.0]
[update, /Scenario[1]/MotionPlan[1]/Node[10]/motion[1]/point[1]/text()[1], 329.0,392.0]
[update, /Scenario[1]/ServicePlan[1]/Node[2]/Service[3]/File[1]/text()[1], route add default dev eth0route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0#!/bin/shHN=`hostname`if [ `uname` =&quot;FreeBSD&quot; ]; thenSCRIPTDIR=/tmp/e0_$HNelse SCRIPTDIR=/root/ficd $SCRIPTDIRmkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txtcd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt#get ip of currenthostnameLen=`expr length $HN`hostnameLen=`expr $hostnameLen - 1`myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;#now insert attack scriptif [ `hostname` = n1 -o 1 = 0 ]then#start loggingtshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP&gt; $HN.capture&amp;mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null&amp;(cat&lt;&lt; 'EOF'#!/bin/bashstartTime=$1duration=$2echo&quot;none&quot;&gt; /tmp/attack.txtsleep $startTimeecho&quot;down&quot;&gt; /tmp/attack.txtifconfig eth0 downsleep $durationifconfig eth0 uprm /tmp/attack.txtEOF)&gt; attack.shchmod 755 attack.sh./attack.sh 60 60elseecho `hostname`&gt;&gt; /tmp/check.txtmgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py&gt; `hostname`.mgencapture&amp;fi]
[update, /Scenario[1]/ServicePlan[1]/Node[3]/Service[3]/File[1]/text()[1], route add default dev eth0route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0#!/bin/shHN=`hostname`if [ `uname` =&quot;FreeBSD&quot; ]; thenSCRIPTDIR=/tmp/e0_$HNelse SCRIPTDIR=/root/ficd $SCRIPTDIRmkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txtcd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt#get ip of currenthostnameLen=`expr length $HN`hostnameLen=`expr $hostnameLen - 1`myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;#now insert attack scriptif [ `hostname` = n1 -o 1 = 0 ]then#start loggingtshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP&gt; $HN.capture&amp;mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null&amp;(cat&lt;&lt; 'EOF'#!/bin/bashstartTime=$1duration=$2echo&quot;none&quot;&gt; /tmp/attack.txtsleep $startTimeecho&quot;down&quot;&gt; /tmp/attack.txtifconfig eth0 downsleep $durationifconfig eth0 uprm /tmp/attack.txtEOF)&gt; attack.shchmod 755 attack.sh./attack.sh 60 60elseecho `hostname`&gt;&gt; /tmp/check.txtmgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py&gt; `hostname`.mgencapture&amp;fi]
[update, /Scenario[1]/ServicePlan[1]/Node[4]/Service[3]/File[1]/text()[1], route add default dev eth0route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0#!/bin/shHN=`hostname`if [ `uname` =&quot;FreeBSD&quot; ]; thenSCRIPTDIR=/tmp/e0_$HNelse SCRIPTDIR=/root/ficd $SCRIPTDIRmkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txtcd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt#get ip of currenthostnameLen=`expr length $HN`hostnameLen=`expr $hostnameLen - 1`myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;#now insert attack scriptif [ `hostname` = n1 -o 1 = 0 ]then#start loggingtshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP&gt; $HN.capture&amp;mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null&amp;(cat&lt;&lt; 'EOF'#!/bin/bashstartTime=$1duration=$2echo&quot;none&quot;&gt; /tmp/attack.txtsleep $startTimeecho&quot;down&quot;&gt; /tmp/attack.txtifconfig eth0 downsleep $durationifconfig eth0 uprm /tmp/attack.txtEOF)&gt; attack.shchmod 755 attack.sh./attack.sh 60 60elseecho `hostname`&gt;&gt; /tmp/check.txtmgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py&gt; `hostname`.mgencapture&amp;fi]
[update, /Scenario[1]/ServicePlan[1]/Node[5]/Service[3]/File[1]/text()[1], route add default dev eth0route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0#!/bin/shHN=`hostname`if [ `uname` =&quot;FreeBSD&quot; ]; thenSCRIPTDIR=/tmp/e0_$HNelse SCRIPTDIR=/root/ficd $SCRIPTDIRmkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txtcd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt#get ip of currenthostnameLen=`expr length $HN`hostnameLen=`expr $hostnameLen - 1`myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;#now insert attack scriptif [ `hostname` = n1 -o 1 = 0 ]then#start loggingtshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP&gt; $HN.capture&amp;mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null&amp;(cat&lt;&lt; 'EOF'#!/bin/bashstartTime=$1duration=$2echo&quot;none&quot;&gt; /tmp/attack.txtsleep $startTimeecho&quot;down&quot;&gt; /tmp/attack.txtifconfig eth0 downsleep $durationifconfig eth0 uprm /tmp/attack.txtEOF)&gt; attack.shchmod 755 attack.sh./attack.sh 60 60elseecho `hostname`&gt;&gt; /tmp/check.txtmgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py&gt; `hostname`.mgencapture&amp;fi]
[update, /Scenario[1]/ServicePlan[1]/Node[6]/Service[3]/File[1]/text()[1], route add default dev eth0route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0#!/bin/shHN=`hostname`if [ `uname` =&quot;FreeBSD&quot; ]; thenSCRIPTDIR=/tmp/e0_$HNelse SCRIPTDIR=/root/ficd $SCRIPTDIRmkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txtcd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt#get ip of currenthostnameLen=`expr length $HN`hostnameLen=`expr $hostnameLen - 1`myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;#now insert attack scriptif [ `hostname` = n1 -o 1 = 0 ]then#start loggingtshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP&gt; $HN.capture&amp;mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null&amp;(cat&lt;&lt; 'EOF'#!/bin/bashstartTime=$1duration=$2echo&quot;none&quot;&gt; /tmp/attack.txtsleep $startTimeecho&quot;down&quot;&gt; /tmp/attack.txtifconfig eth0 downsleep $durationifconfig eth0 uprm /tmp/attack.txtEOF)&gt; attack.shchmod 755 attack.sh./attack.sh 60 60elseecho `hostname`&gt;&gt; /tmp/check.txtmgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py&gt; `hostname`.mgencapture&amp;fi]
[update, /Scenario[1]/ServicePlan[1]/Node[7]/Service[3]/File[1]/text()[1], route add default dev eth0route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0#!/bin/shHN=`hostname`if [ `uname` =&quot;FreeBSD&quot; ]; thenSCRIPTDIR=/tmp/e0_$HNelse SCRIPTDIR=/root/ficd $SCRIPTDIRmkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txtcd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt#get ip of currenthostnameLen=`expr length $HN`hostnameLen=`expr $hostnameLen - 1`myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;#now insert attack scriptif [ `hostname` = n1 -o 1 = 0 ]then#start loggingtshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP&gt; $HN.capture&amp;mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null&amp;(cat&lt;&lt; 'EOF'#!/bin/bashstartTime=$1duration=$2echo&quot;none&quot;&gt; /tmp/attack.txtsleep $startTimeecho&quot;down&quot;&gt; /tmp/attack.txtifconfig eth0 downsleep $durationifconfig eth0 uprm /tmp/attack.txtEOF)&gt; attack.shchmod 755 attack.sh./attack.sh 60 60elseecho `hostname`&gt;&gt; /tmp/check.txtmgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py&gt; `hostname`.mgencapture&amp;fi]
[update, /Scenario[1]/ServicePlan[1]/Node[8]/Service[3]/File[1]/text()[1], route add default dev eth0route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0#!/bin/shHN=`hostname`if [ `uname` =&quot;FreeBSD&quot; ]; thenSCRIPTDIR=/tmp/e0_$HNelse SCRIPTDIR=/root/ficd $SCRIPTDIRmkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txtcd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt#get ip of currenthostnameLen=`expr length $HN`hostnameLen=`expr $hostnameLen - 1`myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;#now insert attack scriptif [ `hostname` = n1 -o 1 = 0 ]then#start loggingtshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP&gt; $HN.capture&amp;mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null&amp;(cat&lt;&lt; 'EOF'#!/bin/bashstartTime=$1duration=$2echo&quot;none&quot;&gt; /tmp/attack.txtsleep $startTimeecho&quot;down&quot;&gt; /tmp/attack.txtifconfig eth0 downsleep $durationifconfig eth0 uprm /tmp/attack.txtEOF)&gt; attack.shchmod 755 attack.sh./attack.sh 60 60elseecho `hostname`&gt;&gt; /tmp/check.txtmgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py&gt; `hostname`.mgencapture&amp;fi]
[update, /Scenario[1]/ServicePlan[1]/Node[9]/Service[3]/File[1]/text()[1], route add default dev eth0route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0#!/bin/shHN=`hostname`if [ `uname` =&quot;FreeBSD&quot; ]; thenSCRIPTDIR=/tmp/e0_$HNelse SCRIPTDIR=/root/ficd $SCRIPTDIRmkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txtcd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt#get ip of currenthostnameLen=`expr length $HN`hostnameLen=`expr $hostnameLen - 1`myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;#now insert attack scriptif [ `hostname` = n1 -o 1 = 0 ]then#start loggingtshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP&gt; $HN.capture&amp;mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null&amp;(cat&lt;&lt; 'EOF'#!/bin/bashstartTime=$1duration=$2echo&quot;none&quot;&gt; /tmp/attack.txtsleep $startTimeecho&quot;down&quot;&gt; /tmp/attack.txtifconfig eth0 downsleep $durationifconfig eth0 uprm /tmp/attack.txtEOF)&gt; attack.shchmod 755 attack.sh./attack.sh 60 60elseecho `hostname`&gt;&gt; /tmp/check.txtmgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py&gt; `hostname`.mgencapture&amp;fi]
[update, /Scenario[1]/ServicePlan[1]/Node[10]/Service[3]/File[1]/text()[1], route add default dev eth0route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0#!/bin/shHN=`hostname`if [ `uname` =&quot;FreeBSD&quot; ]; thenSCRIPTDIR=/tmp/e0_$HNelse SCRIPTDIR=/root/ficd $SCRIPTDIRmkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txtcd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt#get ip of currenthostnameLen=`expr length $HN`hostnameLen=`expr $hostnameLen - 1`myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;#now insert attack scriptif [ `hostname` = n1 -o 1 = 0 ]then#start loggingtshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP&gt; $HN.capture&amp;mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null&amp;(cat&lt;&lt; 'EOF'#!/bin/bashstartTime=$1duration=$2echo&quot;none&quot;&gt; /tmp/attack.txtsleep $startTimeecho&quot;down&quot;&gt; /tmp/attack.txtifconfig eth0 downsleep $durationifconfig eth0 uprm /tmp/attack.txtEOF)&gt; attack.shchmod 755 attack.sh./attack.sh 60 60elseecho `hostname`&gt;&gt; /tmp/check.txtmgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py&gt; `hostname`.mgencapture&amp;fi]
[update, /Scenario[1]/ServicePlan[1]/Node[11]/Service[3]/File[1]/text()[1], route add default dev eth0route add -net 224.0.0.0 netmask 224.0.0.0 dev eth0#!/bin/shHN=`hostname`if [ `uname` =&quot;FreeBSD&quot; ]; thenSCRIPTDIR=/tmp/e0_$HNelse SCRIPTDIR=/root/ficd $SCRIPTDIRmkdir 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txtcd 1_60_60_downAttack_sh_chainCoords_scen_OLSR_chainCoords_txt#get ip of currenthostnameLen=`expr length $HN`hostnameLen=`expr $hostnameLen - 1`myIP=&quot;10.0.0.`expr substr $HN 2 $hostnameLen`&quot;#now insert attack scriptif [ `hostname` = n1 -o 1 = 0 ]then#start loggingtshark -nli eth0 -T fields -E separator=, -e frame.time_epoch -e frame.len -e frame.protocols -e ip.src -e ip.dst -e ipv6.src -e ipv6.dst -e tcp.srcport -e tcp.dstport -e udp.srcport -e udp.dstport | /root/IntelAttacker/netCollect.py $myIP&gt; $HN.capture&amp;mgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn output /dev/null&amp;(cat&lt;&lt; 'EOF'#!/bin/bashstartTime=$1duration=$2echo&quot;none&quot;&gt; /tmp/attack.txtsleep $startTimeecho&quot;down&quot;&gt; /tmp/attack.txtifconfig eth0 downsleep $durationifconfig eth0 uprm /tmp/attack.txtEOF)&gt; attack.shchmod 755 attack.sh./attack.sh 60 60elseecho `hostname`&gt;&gt; /tmp/check.txtmgen flush input /root/IntelAttacker/flowGenerator/flows/flow`hostname`.mgn | /root/IntelAttacker/mgenCollect.py&gt; `hostname`.mgencapture&amp;fi]
[remove, /Scenario[1]/MotionPlan[1]/Node[11]/motion[1]/point[2]]
[remove, /Scenario[1]/ServicePlan[1]/Node[2]/Service[3]/Command[1]/text()[1]]
[remove, /Scenario[1]/ServicePlan[1]/Node[3]/Service[3]/Command[1]/text()[1]]
[remove, /Scenario[1]/ServicePlan[1]/Node[4]/Service[3]/Command[1]/text()[1]]
[remove, /Scenario[1]/ServicePlan[1]/Node[5]/Service[3]/Command[1]/text()[1]]
[remove, /Scenario[1]/ServicePlan[1]/Node[6]/Service[3]/Command[1]/text()[1]]
[remove, /Scenario[1]/ServicePlan[1]/Node[7]/Service[3]/Command[1]/text()[1]]
[remove, /Scenario[1]/ServicePlan[1]/Node[8]/Service[3]/Command[1]/text()[1]]
[remove, /Scenario[1]/ServicePlan[1]/Node[9]/Service[3]/Command[1]/text()[1]]
[remove, /Scenario[1]/ServicePlan[1]/Node[10]/Service[3]/Command[1]/text()[1]]
[remove, /Scenario[1]/ServicePlan[1]/Node[11]/Service[3]/Command[1]/text()[1]]
